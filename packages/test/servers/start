#!/usr/bin/env bash
set -o errexit
set -o nounset
set -o pipefail

export CERBOS_VERSION="${CERBOS_VERSION:-0.16.0}"

if [[ "${CERBOS_VERSION}" = *-prerelease ]]; then
  export CERBOS_IMAGE_TAG="${CERBOS_IMAGE_TAG:-dev}"
fi

while IFS= read -r -d "" config_dir; do
  config_version="${config_dir#servers/config/cerbos/}"
  if [[ "${config_version}" < "${CERBOS_VERSION}" ]]; then
    export CONFIG_VERSION="${config_version}"
  fi
done < <(find servers/config/cerbos -type d -mindepth 1 -maxdepth 1 -print0 | sort -z)

while IFS= read -r -d "" policies_dir; do
  policies_version="${policies_dir#servers/policies/}"
  if [[ "${policies_version}" < "${CERBOS_VERSION}" ]]; then
    export POLICIES_VERSION="${policies_version}"
  fi
done < <(find servers/policies -type d -mindepth 1 -maxdepth 1 -print0 | sort -z)

compose_profiles=()

if [[ $(uname -s) = Linux ]]; then
  compose_profiles+=(linux)
fi

if [[ -f "servers/config/cerbos/${CONFIG_VERSION}/tracing.yaml" ]]; then
  compose_profiles+=(tracing)
fi

export COMPOSE_PROFILES=$(IFS=,; echo "${compose_profiles[*]:-}")

uid=$(id -u)
gid=$(id -g)
export USER="${uid}:${gid}"

mkdir -p servers/tmp/certificates servers/tmp/socket

exec docker compose --file=servers/docker-compose.yaml up --wait
