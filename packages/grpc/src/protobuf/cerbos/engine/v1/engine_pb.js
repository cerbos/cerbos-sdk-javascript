// source: cerbos/engine/v1/engine.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var cerbos_effect_v1_effect_pb = require('../../../cerbos/effect/v1/effect_pb.js');
goog.object.extend(proto, cerbos_effect_v1_effect_pb);
var cerbos_schema_v1_schema_pb = require('../../../cerbos/schema/v1/schema_pb.js');
goog.object.extend(proto, cerbos_schema_v1_schema_pb);
var google_api_expr_v1alpha1_checked_pb = require('../../../google/api/expr/v1alpha1/checked_pb.js');
goog.object.extend(proto, google_api_expr_v1alpha1_checked_pb);
var google_api_field_behavior_pb = require('../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../../../protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
var validate_validate_pb = require('../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.cerbos.engine.v1.AuxData', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.CheckInput', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.CheckOutput', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.CheckOutput.ActionEffect', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.PlanResourcesOutput', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.Operator', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.PlanResourcesOutput.Node', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.PlanResourcesOutput.Node.NodeCase', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.PlanResourcesRequest', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.PlanResourcesRequest.Resource', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Principal', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Resource', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Trace', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Trace.Component', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Trace.Component.DetailsCase', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Trace.Component.Kind', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Trace.Component.Variable', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Trace.Event', null, global);
goog.exportSymbol('proto.cerbos.engine.v1.Trace.Event.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.PlanResourcesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.PlanResourcesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.PlanResourcesRequest.displayName = 'proto.cerbos.engine.v1.PlanResourcesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.PlanResourcesRequest.Resource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.PlanResourcesRequest.Resource.displayName = 'proto.cerbos.engine.v1.PlanResourcesRequest.Resource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.CheckInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.engine.v1.CheckInput.repeatedFields_, null);
};
goog.inherits(proto.cerbos.engine.v1.CheckInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.CheckInput.displayName = 'proto.cerbos.engine.v1.CheckInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.CheckOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.engine.v1.CheckOutput.repeatedFields_, null);
};
goog.inherits(proto.cerbos.engine.v1.CheckOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.CheckOutput.displayName = 'proto.cerbos.engine.v1.CheckOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.CheckOutput.ActionEffect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.CheckOutput.ActionEffect.displayName = 'proto.cerbos.engine.v1.CheckOutput.ActionEffect';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.PlanResourcesOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.PlanResourcesOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.PlanResourcesOutput.displayName = 'proto.cerbos.engine.v1.PlanResourcesOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cerbos.engine.v1.PlanResourcesOutput.Node.oneofGroups_);
};
goog.inherits(proto.cerbos.engine.v1.PlanResourcesOutput.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.PlanResourcesOutput.Node.displayName = 'proto.cerbos.engine.v1.PlanResourcesOutput.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.repeatedFields_, null);
};
goog.inherits(proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.displayName = 'proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.Resource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.Resource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.Resource.displayName = 'proto.cerbos.engine.v1.Resource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.Principal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.engine.v1.Principal.repeatedFields_, null);
};
goog.inherits(proto.cerbos.engine.v1.Principal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.Principal.displayName = 'proto.cerbos.engine.v1.Principal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.AuxData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.AuxData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.AuxData.displayName = 'proto.cerbos.engine.v1.AuxData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.Trace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.engine.v1.Trace.repeatedFields_, null);
};
goog.inherits(proto.cerbos.engine.v1.Trace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.Trace.displayName = 'proto.cerbos.engine.v1.Trace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.Trace.Component = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cerbos.engine.v1.Trace.Component.oneofGroups_);
};
goog.inherits(proto.cerbos.engine.v1.Trace.Component, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.Trace.Component.displayName = 'proto.cerbos.engine.v1.Trace.Component';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.Trace.Component.Variable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.Trace.Component.Variable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.Trace.Component.Variable.displayName = 'proto.cerbos.engine.v1.Trace.Component.Variable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.engine.v1.Trace.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.engine.v1.Trace.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.engine.v1.Trace.Event.displayName = 'proto.cerbos.engine.v1.Trace.Event';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.PlanResourcesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.PlanResourcesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, ""),
    principal: (f = msg.getPrincipal()) && proto.cerbos.engine.v1.Principal.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && proto.cerbos.engine.v1.PlanResourcesRequest.Resource.toObject(includeInstance, f),
    auxData: (f = msg.getAuxData()) && proto.cerbos.engine.v1.AuxData.toObject(includeInstance, f),
    includeMeta: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.PlanResourcesRequest;
  return proto.cerbos.engine.v1.PlanResourcesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.PlanResourcesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 3:
      var value = new proto.cerbos.engine.v1.Principal;
      reader.readMessage(value,proto.cerbos.engine.v1.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 4:
      var value = new proto.cerbos.engine.v1.PlanResourcesRequest.Resource;
      reader.readMessage(value,proto.cerbos.engine.v1.PlanResourcesRequest.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 5:
      var value = new proto.cerbos.engine.v1.AuxData;
      reader.readMessage(value,proto.cerbos.engine.v1.AuxData.deserializeBinaryFromReader);
      msg.setAuxData(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.PlanResourcesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.PlanResourcesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cerbos.engine.v1.Principal.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cerbos.engine.v1.PlanResourcesRequest.Resource.serializeBinaryToWriter
    );
  }
  f = message.getAuxData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cerbos.engine.v1.AuxData.serializeBinaryToWriter
    );
  }
  f = message.getIncludeMeta();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.PlanResourcesRequest.Resource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attrMap: (f = msg.getAttrMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    policyVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.PlanResourcesRequest.Resource;
  return proto.cerbos.engine.v1.PlanResourcesRequest.Resource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = msg.getAttrMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.PlanResourcesRequest.Resource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttrMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getPolicyVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, google.protobuf.Value> attr = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.getAttrMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.clearAttrMap = function() {
  this.getAttrMap().clear();
  return this;};


/**
 * optional string policy_version = 3;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.getPolicyVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.setPolicyVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest.Resource} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.Resource.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string action = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Principal principal = 3;
 * @return {?proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.getPrincipal = function() {
  return /** @type{?proto.cerbos.engine.v1.Principal} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.Principal, 3));
};


/**
 * @param {?proto.cerbos.engine.v1.Principal|undefined} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
*/
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Resource resource = 4;
 * @return {?proto.cerbos.engine.v1.PlanResourcesRequest.Resource}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.getResource = function() {
  return /** @type{?proto.cerbos.engine.v1.PlanResourcesRequest.Resource} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.PlanResourcesRequest.Resource, 4));
};


/**
 * @param {?proto.cerbos.engine.v1.PlanResourcesRequest.Resource|undefined} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
*/
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AuxData aux_data = 5;
 * @return {?proto.cerbos.engine.v1.AuxData}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.getAuxData = function() {
  return /** @type{?proto.cerbos.engine.v1.AuxData} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.AuxData, 5));
};


/**
 * @param {?proto.cerbos.engine.v1.AuxData|undefined} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
*/
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.setAuxData = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.clearAuxData = function() {
  return this.setAuxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.hasAuxData = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool include_meta = 6;
 * @return {boolean}
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.getIncludeMeta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.engine.v1.PlanResourcesRequest.prototype.setIncludeMeta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.engine.v1.CheckInput.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.CheckInput.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.CheckInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.CheckInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.CheckInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resource: (f = msg.getResource()) && proto.cerbos.engine.v1.Resource.toObject(includeInstance, f),
    principal: (f = msg.getPrincipal()) && proto.cerbos.engine.v1.Principal.toObject(includeInstance, f),
    actionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    auxData: (f = msg.getAuxData()) && proto.cerbos.engine.v1.AuxData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.CheckInput}
 */
proto.cerbos.engine.v1.CheckInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.CheckInput;
  return proto.cerbos.engine.v1.CheckInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.CheckInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.CheckInput}
 */
proto.cerbos.engine.v1.CheckInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new proto.cerbos.engine.v1.Resource;
      reader.readMessage(value,proto.cerbos.engine.v1.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 3:
      var value = new proto.cerbos.engine.v1.Principal;
      reader.readMessage(value,proto.cerbos.engine.v1.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addActions(value);
      break;
    case 5:
      var value = new proto.cerbos.engine.v1.AuxData;
      reader.readMessage(value,proto.cerbos.engine.v1.AuxData.deserializeBinaryFromReader);
      msg.setAuxData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.CheckInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.CheckInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.CheckInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.CheckInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cerbos.engine.v1.Resource.serializeBinaryToWriter
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cerbos.engine.v1.Principal.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getAuxData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cerbos.engine.v1.AuxData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.CheckInput.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
 */
proto.cerbos.engine.v1.CheckInput.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Resource resource = 2;
 * @return {?proto.cerbos.engine.v1.Resource}
 */
proto.cerbos.engine.v1.CheckInput.prototype.getResource = function() {
  return /** @type{?proto.cerbos.engine.v1.Resource} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.Resource, 2));
};


/**
 * @param {?proto.cerbos.engine.v1.Resource|undefined} value
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
*/
proto.cerbos.engine.v1.CheckInput.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
 */
proto.cerbos.engine.v1.CheckInput.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.CheckInput.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Principal principal = 3;
 * @return {?proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.engine.v1.CheckInput.prototype.getPrincipal = function() {
  return /** @type{?proto.cerbos.engine.v1.Principal} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.Principal, 3));
};


/**
 * @param {?proto.cerbos.engine.v1.Principal|undefined} value
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
*/
proto.cerbos.engine.v1.CheckInput.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
 */
proto.cerbos.engine.v1.CheckInput.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.CheckInput.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string actions = 4;
 * @return {!Array<string>}
 */
proto.cerbos.engine.v1.CheckInput.prototype.getActionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
 */
proto.cerbos.engine.v1.CheckInput.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
 */
proto.cerbos.engine.v1.CheckInput.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
 */
proto.cerbos.engine.v1.CheckInput.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional AuxData aux_data = 5;
 * @return {?proto.cerbos.engine.v1.AuxData}
 */
proto.cerbos.engine.v1.CheckInput.prototype.getAuxData = function() {
  return /** @type{?proto.cerbos.engine.v1.AuxData} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.AuxData, 5));
};


/**
 * @param {?proto.cerbos.engine.v1.AuxData|undefined} value
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
*/
proto.cerbos.engine.v1.CheckInput.prototype.setAuxData = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.CheckInput} returns this
 */
proto.cerbos.engine.v1.CheckInput.prototype.clearAuxData = function() {
  return this.setAuxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.CheckInput.prototype.hasAuxData = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.engine.v1.CheckOutput.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.CheckOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.CheckOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.CheckOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resourceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    actionsMap: (f = msg.getActionsMap()) ? f.toObject(includeInstance, proto.cerbos.engine.v1.CheckOutput.ActionEffect.toObject) : [],
    effectiveDerivedRolesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    validationErrorsList: jspb.Message.toObjectList(msg.getValidationErrorsList(),
    cerbos_schema_v1_schema_pb.ValidationError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.CheckOutput}
 */
proto.cerbos.engine.v1.CheckOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.CheckOutput;
  return proto.cerbos.engine.v1.CheckOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.CheckOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.CheckOutput}
 */
proto.cerbos.engine.v1.CheckOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceId(value);
      break;
    case 3:
      var value = msg.getActionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.cerbos.engine.v1.CheckOutput.ActionEffect.deserializeBinaryFromReader, "", new proto.cerbos.engine.v1.CheckOutput.ActionEffect());
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addEffectiveDerivedRoles(value);
      break;
    case 5:
      var value = new cerbos_schema_v1_schema_pb.ValidationError;
      reader.readMessage(value,cerbos_schema_v1_schema_pb.ValidationError.deserializeBinaryFromReader);
      msg.addValidationErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.CheckOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.CheckOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.CheckOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResourceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getActionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.cerbos.engine.v1.CheckOutput.ActionEffect.serializeBinaryToWriter);
  }
  f = message.getEffectiveDerivedRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getValidationErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      cerbos_schema_v1_schema_pb.ValidationError.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.CheckOutput.ActionEffect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.CheckOutput.ActionEffect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.toObject = function(includeInstance, msg) {
  var f, obj = {
    effect: jspb.Message.getFieldWithDefault(msg, 1, 0),
    policy: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.CheckOutput.ActionEffect}
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.CheckOutput.ActionEffect;
  return proto.cerbos.engine.v1.CheckOutput.ActionEffect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.CheckOutput.ActionEffect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.CheckOutput.ActionEffect}
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cerbos.effect.v1.Effect} */ (reader.readEnum());
      msg.setEffect(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicy(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.CheckOutput.ActionEffect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.CheckOutput.ActionEffect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEffect();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPolicy();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional cerbos.effect.v1.Effect effect = 1;
 * @return {!proto.cerbos.effect.v1.Effect}
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.getEffect = function() {
  return /** @type {!proto.cerbos.effect.v1.Effect} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cerbos.effect.v1.Effect} value
 * @return {!proto.cerbos.engine.v1.CheckOutput.ActionEffect} returns this
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.setEffect = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string policy = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.getPolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.CheckOutput.ActionEffect} returns this
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string scope = 3;
 * @return {string}
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.CheckOutput.ActionEffect} returns this
 */
proto.cerbos.engine.v1.CheckOutput.ActionEffect.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
 */
proto.cerbos.engine.v1.CheckOutput.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string resource_id = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.getResourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
 */
proto.cerbos.engine.v1.CheckOutput.prototype.setResourceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, ActionEffect> actions = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.cerbos.engine.v1.CheckOutput.ActionEffect>}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.getActionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.cerbos.engine.v1.CheckOutput.ActionEffect>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.cerbos.engine.v1.CheckOutput.ActionEffect));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
 */
proto.cerbos.engine.v1.CheckOutput.prototype.clearActionsMap = function() {
  this.getActionsMap().clear();
  return this;};


/**
 * repeated string effective_derived_roles = 4;
 * @return {!Array<string>}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.getEffectiveDerivedRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
 */
proto.cerbos.engine.v1.CheckOutput.prototype.setEffectiveDerivedRolesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
 */
proto.cerbos.engine.v1.CheckOutput.prototype.addEffectiveDerivedRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
 */
proto.cerbos.engine.v1.CheckOutput.prototype.clearEffectiveDerivedRolesList = function() {
  return this.setEffectiveDerivedRolesList([]);
};


/**
 * repeated cerbos.schema.v1.ValidationError validation_errors = 5;
 * @return {!Array<!proto.cerbos.schema.v1.ValidationError>}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.getValidationErrorsList = function() {
  return /** @type{!Array<!proto.cerbos.schema.v1.ValidationError>} */ (
    jspb.Message.getRepeatedWrapperField(this, cerbos_schema_v1_schema_pb.ValidationError, 5));
};


/**
 * @param {!Array<!proto.cerbos.schema.v1.ValidationError>} value
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
*/
proto.cerbos.engine.v1.CheckOutput.prototype.setValidationErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.cerbos.schema.v1.ValidationError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.schema.v1.ValidationError}
 */
proto.cerbos.engine.v1.CheckOutput.prototype.addValidationErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.cerbos.schema.v1.ValidationError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.engine.v1.CheckOutput} returns this
 */
proto.cerbos.engine.v1.CheckOutput.prototype.clearValidationErrorsList = function() {
  return this.setValidationErrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.PlanResourcesOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 3, ""),
    policyVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 5, ""),
    filter: (f = msg.getFilter()) && proto.cerbos.engine.v1.PlanResourcesOutput.Node.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.PlanResourcesOutput;
  return proto.cerbos.engine.v1.PlanResourcesOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 6:
      var value = new proto.cerbos.engine.v1.PlanResourcesOutput.Node;
      reader.readMessage(value,proto.cerbos.engine.v1.PlanResourcesOutput.Node.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.PlanResourcesOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPolicyVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cerbos.engine.v1.PlanResourcesOutput.Node.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.NodeCase = {
  NODE_NOT_SET: 0,
  LOGICAL_OPERATION: 1,
  EXPRESSION: 2
};

/**
 * @return {proto.cerbos.engine.v1.PlanResourcesOutput.Node.NodeCase}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.getNodeCase = function() {
  return /** @type {proto.cerbos.engine.v1.PlanResourcesOutput.Node.NodeCase} */(jspb.Message.computeOneofCase(this, proto.cerbos.engine.v1.PlanResourcesOutput.Node.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.PlanResourcesOutput.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicalOperation: (f = msg.getLogicalOperation()) && proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.toObject(includeInstance, f),
    expression: (f = msg.getExpression()) && google_api_expr_v1alpha1_checked_pb.CheckedExpr.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.Node}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.PlanResourcesOutput.Node;
  return proto.cerbos.engine.v1.PlanResourcesOutput.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.Node}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation;
      reader.readMessage(value,proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.deserializeBinaryFromReader);
      msg.setLogicalOperation(value);
      break;
    case 2:
      var value = new google_api_expr_v1alpha1_checked_pb.CheckedExpr;
      reader.readMessage(value,google_api_expr_v1alpha1_checked_pb.CheckedExpr.deserializeBinaryFromReader);
      msg.setExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.PlanResourcesOutput.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicalOperation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.serializeBinaryToWriter
    );
  }
  f = message.getExpression();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_api_expr_v1alpha1_checked_pb.CheckedExpr.serializeBinaryToWriter
    );
  }
};


/**
 * optional LogicalOperation logical_operation = 1;
 * @return {?proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.getLogicalOperation = function() {
  return /** @type{?proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation, 1));
};


/**
 * @param {?proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation|undefined} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.Node} returns this
*/
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.setLogicalOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cerbos.engine.v1.PlanResourcesOutput.Node.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.Node} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.clearLogicalOperation = function() {
  return this.setLogicalOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.hasLogicalOperation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.api.expr.v1alpha1.CheckedExpr expression = 2;
 * @return {?proto.google.api.expr.v1alpha1.CheckedExpr}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.getExpression = function() {
  return /** @type{?proto.google.api.expr.v1alpha1.CheckedExpr} */ (
    jspb.Message.getWrapperField(this, google_api_expr_v1alpha1_checked_pb.CheckedExpr, 2));
};


/**
 * @param {?proto.google.api.expr.v1alpha1.CheckedExpr|undefined} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.Node} returns this
*/
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.setExpression = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cerbos.engine.v1.PlanResourcesOutput.Node.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.Node} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.clearExpression = function() {
  return this.setExpression(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.Node.prototype.hasExpression = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    operator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.cerbos.engine.v1.PlanResourcesOutput.Node.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation;
  return proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 2:
      var value = new proto.cerbos.engine.v1.PlanResourcesOutput.Node;
      reader.readMessage(value,proto.cerbos.engine.v1.PlanResourcesOutput.Node.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cerbos.engine.v1.PlanResourcesOutput.Node.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.Operator = {
  OPERATOR_UNSPECIFIED: 0,
  OPERATOR_AND: 1,
  OPERATOR_OR: 2,
  OPERATOR_NOT: 3
};

/**
 * optional Operator operator = 1;
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.Operator}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.getOperator = function() {
  return /** @type {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.Operator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.Operator} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Node nodes = 2;
 * @return {!Array<!proto.cerbos.engine.v1.PlanResourcesOutput.Node>}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.cerbos.engine.v1.PlanResourcesOutput.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.engine.v1.PlanResourcesOutput.Node, 2));
};


/**
 * @param {!Array<!proto.cerbos.engine.v1.PlanResourcesOutput.Node>} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation} returns this
*/
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cerbos.engine.v1.PlanResourcesOutput.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.Node}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cerbos.engine.v1.PlanResourcesOutput.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.LogicalOperation.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string action = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string kind = 3;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string policy_version = 4;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.getPolicyVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.setPolicyVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string scope = 5;
 * @return {string}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Node filter = 6;
 * @return {?proto.cerbos.engine.v1.PlanResourcesOutput.Node}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.getFilter = function() {
  return /** @type{?proto.cerbos.engine.v1.PlanResourcesOutput.Node} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.PlanResourcesOutput.Node, 6));
};


/**
 * @param {?proto.cerbos.engine.v1.PlanResourcesOutput.Node|undefined} value
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput} returns this
*/
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.PlanResourcesOutput} returns this
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.PlanResourcesOutput.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.Resource.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.Resource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.Resource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Resource.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    policyVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attrMap: (f = msg.getAttrMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    scope: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.Resource}
 */
proto.cerbos.engine.v1.Resource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.Resource;
  return proto.cerbos.engine.v1.Resource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.Resource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.Resource}
 */
proto.cerbos.engine.v1.Resource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = msg.getAttrMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.Resource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.Resource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.Resource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Resource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPolicyVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttrMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.Resource.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Resource} returns this
 */
proto.cerbos.engine.v1.Resource.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string policy_version = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.Resource.prototype.getPolicyVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Resource} returns this
 */
proto.cerbos.engine.v1.Resource.prototype.setPolicyVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.cerbos.engine.v1.Resource.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Resource} returns this
 */
proto.cerbos.engine.v1.Resource.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, google.protobuf.Value> attr = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.cerbos.engine.v1.Resource.prototype.getAttrMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cerbos.engine.v1.Resource} returns this
 */
proto.cerbos.engine.v1.Resource.prototype.clearAttrMap = function() {
  this.getAttrMap().clear();
  return this;};


/**
 * optional string scope = 5;
 * @return {string}
 */
proto.cerbos.engine.v1.Resource.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Resource} returns this
 */
proto.cerbos.engine.v1.Resource.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.engine.v1.Principal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.Principal.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.Principal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.Principal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Principal.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    policyVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rolesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    attrMap: (f = msg.getAttrMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    scope: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.engine.v1.Principal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.Principal;
  return proto.cerbos.engine.v1.Principal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.Principal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.engine.v1.Principal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    case 4:
      var value = msg.getAttrMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.Principal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.Principal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.Principal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Principal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPolicyVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAttrMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.Principal.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Principal} returns this
 */
proto.cerbos.engine.v1.Principal.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string policy_version = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.Principal.prototype.getPolicyVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Principal} returns this
 */
proto.cerbos.engine.v1.Principal.prototype.setPolicyVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string roles = 3;
 * @return {!Array<string>}
 */
proto.cerbos.engine.v1.Principal.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.engine.v1.Principal} returns this
 */
proto.cerbos.engine.v1.Principal.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.engine.v1.Principal} returns this
 */
proto.cerbos.engine.v1.Principal.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.engine.v1.Principal} returns this
 */
proto.cerbos.engine.v1.Principal.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * map<string, google.protobuf.Value> attr = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.cerbos.engine.v1.Principal.prototype.getAttrMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cerbos.engine.v1.Principal} returns this
 */
proto.cerbos.engine.v1.Principal.prototype.clearAttrMap = function() {
  this.getAttrMap().clear();
  return this;};


/**
 * optional string scope = 5;
 * @return {string}
 */
proto.cerbos.engine.v1.Principal.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Principal} returns this
 */
proto.cerbos.engine.v1.Principal.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.AuxData.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.AuxData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.AuxData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.AuxData.toObject = function(includeInstance, msg) {
  var f, obj = {
    jwtMap: (f = msg.getJwtMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.AuxData}
 */
proto.cerbos.engine.v1.AuxData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.AuxData;
  return proto.cerbos.engine.v1.AuxData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.AuxData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.AuxData}
 */
proto.cerbos.engine.v1.AuxData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getJwtMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.AuxData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.AuxData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.AuxData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.AuxData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJwtMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * map<string, google.protobuf.Value> jwt = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.cerbos.engine.v1.AuxData.prototype.getJwtMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cerbos.engine.v1.AuxData} returns this
 */
proto.cerbos.engine.v1.AuxData.prototype.clearJwtMap = function() {
  this.getJwtMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.engine.v1.Trace.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.Trace.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.Trace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.Trace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.toObject = function(includeInstance, msg) {
  var f, obj = {
    componentsList: jspb.Message.toObjectList(msg.getComponentsList(),
    proto.cerbos.engine.v1.Trace.Component.toObject, includeInstance),
    event: (f = msg.getEvent()) && proto.cerbos.engine.v1.Trace.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.Trace}
 */
proto.cerbos.engine.v1.Trace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.Trace;
  return proto.cerbos.engine.v1.Trace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.Trace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.Trace}
 */
proto.cerbos.engine.v1.Trace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cerbos.engine.v1.Trace.Component;
      reader.readMessage(value,proto.cerbos.engine.v1.Trace.Component.deserializeBinaryFromReader);
      msg.addComponents(value);
      break;
    case 2:
      var value = new proto.cerbos.engine.v1.Trace.Event;
      reader.readMessage(value,proto.cerbos.engine.v1.Trace.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.Trace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.Trace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.Trace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cerbos.engine.v1.Trace.Component.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cerbos.engine.v1.Trace.Event.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cerbos.engine.v1.Trace.Component.oneofGroups_ = [[2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.cerbos.engine.v1.Trace.Component.DetailsCase = {
  DETAILS_NOT_SET: 0,
  ACTION: 2,
  DERIVED_ROLE: 3,
  EXPR: 4,
  INDEX: 5,
  POLICY: 6,
  RESOURCE: 7,
  RULE: 8,
  SCOPE: 9,
  VARIABLE: 10
};

/**
 * @return {proto.cerbos.engine.v1.Trace.Component.DetailsCase}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getDetailsCase = function() {
  return /** @type {proto.cerbos.engine.v1.Trace.Component.DetailsCase} */(jspb.Message.computeOneofCase(this, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.Trace.Component.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.Trace.Component} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.Component.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    action: jspb.Message.getFieldWithDefault(msg, 2, ""),
    derivedRole: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expr: jspb.Message.getFieldWithDefault(msg, 4, ""),
    index: jspb.Message.getFieldWithDefault(msg, 5, 0),
    policy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    resource: jspb.Message.getFieldWithDefault(msg, 7, ""),
    rule: jspb.Message.getFieldWithDefault(msg, 8, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 9, ""),
    variable: (f = msg.getVariable()) && proto.cerbos.engine.v1.Trace.Component.Variable.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.Trace.Component}
 */
proto.cerbos.engine.v1.Trace.Component.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.Trace.Component;
  return proto.cerbos.engine.v1.Trace.Component.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.Trace.Component} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.Trace.Component}
 */
proto.cerbos.engine.v1.Trace.Component.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cerbos.engine.v1.Trace.Component.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDerivedRole(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpr(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setResource(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRule(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 10:
      var value = new proto.cerbos.engine.v1.Trace.Component.Variable;
      reader.readMessage(value,proto.cerbos.engine.v1.Trace.Component.Variable.deserializeBinaryFromReader);
      msg.setVariable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.Trace.Component.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.Trace.Component} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.Component.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getVariable();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cerbos.engine.v1.Trace.Component.Variable.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cerbos.engine.v1.Trace.Component.Kind = {
  KIND_UNSPECIFIED: 0,
  KIND_ACTION: 1,
  KIND_CONDITION_ALL: 2,
  KIND_CONDITION_ANY: 3,
  KIND_CONDITION_NONE: 4,
  KIND_CONDITION: 5,
  KIND_DERIVED_ROLE: 6,
  KIND_EXPR: 7,
  KIND_POLICY: 8,
  KIND_RESOURCE: 9,
  KIND_RULE: 10,
  KIND_SCOPE: 11,
  KIND_VARIABLE: 12,
  KIND_VARIABLES: 13
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.Trace.Component.Variable.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.Trace.Component.Variable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.Trace.Component.Variable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.Component.Variable.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.Trace.Component.Variable}
 */
proto.cerbos.engine.v1.Trace.Component.Variable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.Trace.Component.Variable;
  return proto.cerbos.engine.v1.Trace.Component.Variable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.Trace.Component.Variable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.Trace.Component.Variable}
 */
proto.cerbos.engine.v1.Trace.Component.Variable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.Trace.Component.Variable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.Trace.Component.Variable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.Trace.Component.Variable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.Component.Variable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.Variable.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component.Variable} returns this
 */
proto.cerbos.engine.v1.Trace.Component.Variable.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string expr = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.Variable.prototype.getExpr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component.Variable} returns this
 */
proto.cerbos.engine.v1.Trace.Component.Variable.prototype.setExpr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Kind kind = 1;
 * @return {!proto.cerbos.engine.v1.Trace.Component.Kind}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getKind = function() {
  return /** @type {!proto.cerbos.engine.v1.Trace.Component.Kind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cerbos.engine.v1.Trace.Component.Kind} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string action = 2;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setAction = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearAction = function() {
  return jspb.Message.setOneofField(this, 2, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string derived_role = 3;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getDerivedRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setDerivedRole = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearDerivedRole = function() {
  return jspb.Message.setOneofField(this, 3, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasDerivedRole = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string expr = 4;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getExpr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setExpr = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearExpr = function() {
  return jspb.Message.setOneofField(this, 4, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasExpr = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 index = 5;
 * @return {number}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setIndex = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearIndex = function() {
  return jspb.Message.setOneofField(this, 5, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string policy = 6;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getPolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setPolicy = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearPolicy = function() {
  return jspb.Message.setOneofField(this, 6, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasPolicy = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string resource = 7;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getResource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setResource = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearResource = function() {
  return jspb.Message.setOneofField(this, 7, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasResource = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string rule = 8;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setRule = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearRule = function() {
  return jspb.Message.setOneofField(this, 8, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasRule = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string scope = 9;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.setScope = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearScope = function() {
  return jspb.Message.setOneofField(this, 9, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasScope = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Variable variable = 10;
 * @return {?proto.cerbos.engine.v1.Trace.Component.Variable}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.getVariable = function() {
  return /** @type{?proto.cerbos.engine.v1.Trace.Component.Variable} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.Trace.Component.Variable, 10));
};


/**
 * @param {?proto.cerbos.engine.v1.Trace.Component.Variable|undefined} value
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
*/
proto.cerbos.engine.v1.Trace.Component.prototype.setVariable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.cerbos.engine.v1.Trace.Component.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Component} returns this
 */
proto.cerbos.engine.v1.Trace.Component.prototype.clearVariable = function() {
  return this.setVariable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Component.prototype.hasVariable = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.engine.v1.Trace.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.engine.v1.Trace.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    effect: jspb.Message.getFieldWithDefault(msg, 2, 0),
    error: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    result: (f = msg.getResult()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.engine.v1.Trace.Event}
 */
proto.cerbos.engine.v1.Trace.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.engine.v1.Trace.Event;
  return proto.cerbos.engine.v1.Trace.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.engine.v1.Trace.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.engine.v1.Trace.Event}
 */
proto.cerbos.engine.v1.Trace.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cerbos.engine.v1.Trace.Event.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.cerbos.effect.v1.Effect} */ (reader.readEnum());
      msg.setEffect(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.engine.v1.Trace.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.engine.v1.Trace.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.engine.v1.Trace.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEffect();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cerbos.engine.v1.Trace.Event.Status = {
  STATUS_UNSPECIFIED: 0,
  STATUS_ACTIVATED: 1,
  STATUS_SKIPPED: 2
};

/**
 * optional Status status = 1;
 * @return {!proto.cerbos.engine.v1.Trace.Event.Status}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.getStatus = function() {
  return /** @type {!proto.cerbos.engine.v1.Trace.Event.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cerbos.engine.v1.Trace.Event.Status} value
 * @return {!proto.cerbos.engine.v1.Trace.Event} returns this
 */
proto.cerbos.engine.v1.Trace.Event.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional cerbos.effect.v1.Effect effect = 2;
 * @return {!proto.cerbos.effect.v1.Effect}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.getEffect = function() {
  return /** @type {!proto.cerbos.effect.v1.Effect} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cerbos.effect.v1.Effect} value
 * @return {!proto.cerbos.engine.v1.Trace.Event} returns this
 */
proto.cerbos.engine.v1.Trace.Event.prototype.setEffect = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string error = 3;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Event} returns this
 */
proto.cerbos.engine.v1.Trace.Event.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.engine.v1.Trace.Event} returns this
 */
proto.cerbos.engine.v1.Trace.Event.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Value result = 5;
 * @return {?proto.google.protobuf.Value}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.getResult = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 5));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.cerbos.engine.v1.Trace.Event} returns this
*/
proto.cerbos.engine.v1.Trace.Event.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace.Event} returns this
 */
proto.cerbos.engine.v1.Trace.Event.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.Event.prototype.hasResult = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Component components = 1;
 * @return {!Array<!proto.cerbos.engine.v1.Trace.Component>}
 */
proto.cerbos.engine.v1.Trace.prototype.getComponentsList = function() {
  return /** @type{!Array<!proto.cerbos.engine.v1.Trace.Component>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.engine.v1.Trace.Component, 1));
};


/**
 * @param {!Array<!proto.cerbos.engine.v1.Trace.Component>} value
 * @return {!proto.cerbos.engine.v1.Trace} returns this
*/
proto.cerbos.engine.v1.Trace.prototype.setComponentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cerbos.engine.v1.Trace.Component=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.engine.v1.Trace.Component}
 */
proto.cerbos.engine.v1.Trace.prototype.addComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cerbos.engine.v1.Trace.Component, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.engine.v1.Trace} returns this
 */
proto.cerbos.engine.v1.Trace.prototype.clearComponentsList = function() {
  return this.setComponentsList([]);
};


/**
 * optional Event event = 2;
 * @return {?proto.cerbos.engine.v1.Trace.Event}
 */
proto.cerbos.engine.v1.Trace.prototype.getEvent = function() {
  return /** @type{?proto.cerbos.engine.v1.Trace.Event} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.engine.v1.Trace.Event, 2));
};


/**
 * @param {?proto.cerbos.engine.v1.Trace.Event|undefined} value
 * @return {!proto.cerbos.engine.v1.Trace} returns this
*/
proto.cerbos.engine.v1.Trace.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.engine.v1.Trace} returns this
 */
proto.cerbos.engine.v1.Trace.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.engine.v1.Trace.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.cerbos.engine.v1);
