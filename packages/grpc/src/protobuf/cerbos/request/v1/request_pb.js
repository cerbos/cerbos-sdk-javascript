// source: cerbos/request/v1/request.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var cerbos_engine_v1_engine_pb = require('../../../cerbos/engine/v1/engine_pb.js');
goog.object.extend(proto, cerbos_engine_v1_engine_pb);
var cerbos_policy_v1_policy_pb = require('../../../cerbos/policy/v1/policy_pb.js');
goog.object.extend(proto, cerbos_policy_v1_policy_pb);
var cerbos_schema_v1_schema_pb = require('../../../cerbos/schema/v1/schema_pb.js');
goog.object.extend(proto, cerbos_schema_v1_schema_pb);
var google_api_field_behavior_pb = require('../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../../../protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
var validate_validate_pb = require('../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.cerbos.request.v1.AddOrUpdatePolicyRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.AddOrUpdateSchemaRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.AttributesMap', null, global);
goog.exportSymbol('proto.cerbos.request.v1.AuxData', null, global);
goog.exportSymbol('proto.cerbos.request.v1.AuxData.JWT', null, global);
goog.exportSymbol('proto.cerbos.request.v1.CheckResourceBatchRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry', null, global);
goog.exportSymbol('proto.cerbos.request.v1.CheckResourceSetRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.CheckResourcesRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry', null, global);
goog.exportSymbol('proto.cerbos.request.v1.DeleteSchemaRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.File', null, global);
goog.exportSymbol('proto.cerbos.request.v1.GetPolicyRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.GetSchemaRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ListAuditLogEntriesRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ListAuditLogEntriesRequest.FilterCase', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ListAuditLogEntriesRequest.Kind', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ListPoliciesRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ListSchemasRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.PlanResourcesRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.PlaygroundEvaluateRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.PlaygroundProxyRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.PlaygroundProxyRequest.ProxyRequestCase', null, global);
goog.exportSymbol('proto.cerbos.request.v1.PlaygroundTestRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.PlaygroundValidateRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ReloadStoreRequest', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ResourceSet', null, global);
goog.exportSymbol('proto.cerbos.request.v1.ServerInfoRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.PlanResourcesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.PlanResourcesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.PlanResourcesRequest.displayName = 'proto.cerbos.request.v1.PlanResourcesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.CheckResourceSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.CheckResourceSetRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.CheckResourceSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.CheckResourceSetRequest.displayName = 'proto.cerbos.request.v1.CheckResourceSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.ResourceSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.ResourceSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.ResourceSet.displayName = 'proto.cerbos.request.v1.ResourceSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.AttributesMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.AttributesMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.AttributesMap.displayName = 'proto.cerbos.request.v1.AttributesMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.CheckResourceBatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.CheckResourceBatchRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.CheckResourceBatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.CheckResourceBatchRequest.displayName = 'proto.cerbos.request.v1.CheckResourceBatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.displayName = 'proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.CheckResourcesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.CheckResourcesRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.CheckResourcesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.CheckResourcesRequest.displayName = 'proto.cerbos.request.v1.CheckResourcesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.displayName = 'proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.AuxData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.AuxData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.AuxData.displayName = 'proto.cerbos.request.v1.AuxData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.AuxData.JWT = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.AuxData.JWT, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.AuxData.JWT.displayName = 'proto.cerbos.request.v1.AuxData.JWT';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.File.displayName = 'proto.cerbos.request.v1.File';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.PlaygroundValidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.PlaygroundValidateRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.PlaygroundValidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.PlaygroundValidateRequest.displayName = 'proto.cerbos.request.v1.PlaygroundValidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.PlaygroundTestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.PlaygroundTestRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.PlaygroundTestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.PlaygroundTestRequest.displayName = 'proto.cerbos.request.v1.PlaygroundTestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.PlaygroundEvaluateRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.PlaygroundEvaluateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.PlaygroundEvaluateRequest.displayName = 'proto.cerbos.request.v1.PlaygroundEvaluateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.PlaygroundProxyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.PlaygroundProxyRequest.repeatedFields_, proto.cerbos.request.v1.PlaygroundProxyRequest.oneofGroups_);
};
goog.inherits(proto.cerbos.request.v1.PlaygroundProxyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.PlaygroundProxyRequest.displayName = 'proto.cerbos.request.v1.PlaygroundProxyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.AddOrUpdatePolicyRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.AddOrUpdatePolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.AddOrUpdatePolicyRequest.displayName = 'proto.cerbos.request.v1.AddOrUpdatePolicyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_);
};
goog.inherits(proto.cerbos.request.v1.ListAuditLogEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.ListAuditLogEntriesRequest.displayName = 'proto.cerbos.request.v1.ListAuditLogEntriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.displayName = 'proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.ServerInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.ServerInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.ServerInfoRequest.displayName = 'proto.cerbos.request.v1.ServerInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.ListPoliciesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.ListPoliciesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.ListPoliciesRequest.displayName = 'proto.cerbos.request.v1.ListPoliciesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.GetPolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.GetPolicyRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.GetPolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.GetPolicyRequest.displayName = 'proto.cerbos.request.v1.GetPolicyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.AddOrUpdateSchemaRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.AddOrUpdateSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.AddOrUpdateSchemaRequest.displayName = 'proto.cerbos.request.v1.AddOrUpdateSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.ListSchemasRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.ListSchemasRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.ListSchemasRequest.displayName = 'proto.cerbos.request.v1.ListSchemasRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.GetSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.GetSchemaRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.GetSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.GetSchemaRequest.displayName = 'proto.cerbos.request.v1.GetSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.DeleteSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cerbos.request.v1.DeleteSchemaRequest.repeatedFields_, null);
};
goog.inherits(proto.cerbos.request.v1.DeleteSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.DeleteSchemaRequest.displayName = 'proto.cerbos.request.v1.DeleteSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cerbos.request.v1.ReloadStoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cerbos.request.v1.ReloadStoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cerbos.request.v1.ReloadStoreRequest.displayName = 'proto.cerbos.request.v1.ReloadStoreRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.PlanResourcesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.PlanResourcesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlanResourcesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, ""),
    principal: (f = msg.getPrincipal()) && cerbos_engine_v1_engine_pb.Principal.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && cerbos_engine_v1_engine_pb.PlanResourcesRequest.Resource.toObject(includeInstance, f),
    auxData: (f = msg.getAuxData()) && proto.cerbos.request.v1.AuxData.toObject(includeInstance, f),
    includeMeta: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest}
 */
proto.cerbos.request.v1.PlanResourcesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.PlanResourcesRequest;
  return proto.cerbos.request.v1.PlanResourcesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.PlanResourcesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest}
 */
proto.cerbos.request.v1.PlanResourcesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 3:
      var value = new cerbos_engine_v1_engine_pb.Principal;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 4:
      var value = new cerbos_engine_v1_engine_pb.PlanResourcesRequest.Resource;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.PlanResourcesRequest.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 5:
      var value = new proto.cerbos.request.v1.AuxData;
      reader.readMessage(value,proto.cerbos.request.v1.AuxData.deserializeBinaryFromReader);
      msg.setAuxData(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.PlanResourcesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.PlanResourcesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlanResourcesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cerbos_engine_v1_engine_pb.Principal.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cerbos_engine_v1_engine_pb.PlanResourcesRequest.Resource.serializeBinaryToWriter
    );
  }
  f = message.getAuxData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cerbos.request.v1.AuxData.serializeBinaryToWriter
    );
  }
  f = message.getIncludeMeta();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string action = 2;
 * @return {string}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cerbos.engine.v1.Principal principal = 3;
 * @return {?proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.getPrincipal = function() {
  return /** @type{?proto.cerbos.engine.v1.Principal} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Principal, 3));
};


/**
 * @param {?proto.cerbos.engine.v1.Principal|undefined} value
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
*/
proto.cerbos.request.v1.PlanResourcesRequest.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cerbos.engine.v1.PlanResourcesRequest.Resource resource = 4;
 * @return {?proto.cerbos.engine.v1.PlanResourcesRequest.Resource}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.getResource = function() {
  return /** @type{?proto.cerbos.engine.v1.PlanResourcesRequest.Resource} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.PlanResourcesRequest.Resource, 4));
};


/**
 * @param {?proto.cerbos.engine.v1.PlanResourcesRequest.Resource|undefined} value
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
*/
proto.cerbos.request.v1.PlanResourcesRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AuxData aux_data = 5;
 * @return {?proto.cerbos.request.v1.AuxData}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.getAuxData = function() {
  return /** @type{?proto.cerbos.request.v1.AuxData} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.AuxData, 5));
};


/**
 * @param {?proto.cerbos.request.v1.AuxData|undefined} value
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
*/
proto.cerbos.request.v1.PlanResourcesRequest.prototype.setAuxData = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.clearAuxData = function() {
  return this.setAuxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.hasAuxData = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool include_meta = 6;
 * @return {boolean}
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.getIncludeMeta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cerbos.request.v1.PlanResourcesRequest} returns this
 */
proto.cerbos.request.v1.PlanResourcesRequest.prototype.setIncludeMeta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.CheckResourceSetRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.CheckResourceSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.CheckResourceSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourceSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    actionsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    principal: (f = msg.getPrincipal()) && cerbos_engine_v1_engine_pb.Principal.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && proto.cerbos.request.v1.ResourceSet.toObject(includeInstance, f),
    includeMeta: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    auxData: (f = msg.getAuxData()) && proto.cerbos.request.v1.AuxData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.CheckResourceSetRequest;
  return proto.cerbos.request.v1.CheckResourceSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.CheckResourceSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addActions(value);
      break;
    case 3:
      var value = new cerbos_engine_v1_engine_pb.Principal;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 4:
      var value = new proto.cerbos.request.v1.ResourceSet;
      reader.readMessage(value,proto.cerbos.request.v1.ResourceSet.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMeta(value);
      break;
    case 6:
      var value = new proto.cerbos.request.v1.AuxData;
      reader.readMessage(value,proto.cerbos.request.v1.AuxData.deserializeBinaryFromReader);
      msg.setAuxData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.CheckResourceSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.CheckResourceSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourceSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cerbos_engine_v1_engine_pb.Principal.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cerbos.request.v1.ResourceSet.serializeBinaryToWriter
    );
  }
  f = message.getIncludeMeta();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getAuxData();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cerbos.request.v1.AuxData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string actions = 2;
 * @return {!Array<string>}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.getActionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional cerbos.engine.v1.Principal principal = 3;
 * @return {?proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.getPrincipal = function() {
  return /** @type{?proto.cerbos.engine.v1.Principal} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Principal, 3));
};


/**
 * @param {?proto.cerbos.engine.v1.Principal|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
*/
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResourceSet resource = 4;
 * @return {?proto.cerbos.request.v1.ResourceSet}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.getResource = function() {
  return /** @type{?proto.cerbos.request.v1.ResourceSet} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.ResourceSet, 4));
};


/**
 * @param {?proto.cerbos.request.v1.ResourceSet|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
*/
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool include_meta = 5;
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.getIncludeMeta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.setIncludeMeta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional AuxData aux_data = 6;
 * @return {?proto.cerbos.request.v1.AuxData}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.getAuxData = function() {
  return /** @type{?proto.cerbos.request.v1.AuxData} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.AuxData, 6));
};


/**
 * @param {?proto.cerbos.request.v1.AuxData|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
*/
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.setAuxData = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourceSetRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.clearAuxData = function() {
  return this.setAuxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourceSetRequest.prototype.hasAuxData = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.ResourceSet.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.ResourceSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.ResourceSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ResourceSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    policyVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    instancesMap: (f = msg.getInstancesMap()) ? f.toObject(includeInstance, proto.cerbos.request.v1.AttributesMap.toObject) : [],
    scope: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.ResourceSet}
 */
proto.cerbos.request.v1.ResourceSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.ResourceSet;
  return proto.cerbos.request.v1.ResourceSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.ResourceSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.ResourceSet}
 */
proto.cerbos.request.v1.ResourceSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyVersion(value);
      break;
    case 3:
      var value = msg.getInstancesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.cerbos.request.v1.AttributesMap.deserializeBinaryFromReader, "", new proto.cerbos.request.v1.AttributesMap());
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.ResourceSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.ResourceSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.ResourceSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ResourceSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPolicyVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInstancesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.cerbos.request.v1.AttributesMap.serializeBinaryToWriter);
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.cerbos.request.v1.ResourceSet.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.ResourceSet} returns this
 */
proto.cerbos.request.v1.ResourceSet.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string policy_version = 2;
 * @return {string}
 */
proto.cerbos.request.v1.ResourceSet.prototype.getPolicyVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.ResourceSet} returns this
 */
proto.cerbos.request.v1.ResourceSet.prototype.setPolicyVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, AttributesMap> instances = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.cerbos.request.v1.AttributesMap>}
 */
proto.cerbos.request.v1.ResourceSet.prototype.getInstancesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.cerbos.request.v1.AttributesMap>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.cerbos.request.v1.AttributesMap));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cerbos.request.v1.ResourceSet} returns this
 */
proto.cerbos.request.v1.ResourceSet.prototype.clearInstancesMap = function() {
  this.getInstancesMap().clear();
  return this;};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.cerbos.request.v1.ResourceSet.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.ResourceSet} returns this
 */
proto.cerbos.request.v1.ResourceSet.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.AttributesMap.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.AttributesMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.AttributesMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AttributesMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    attrMap: (f = msg.getAttrMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.AttributesMap}
 */
proto.cerbos.request.v1.AttributesMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.AttributesMap;
  return proto.cerbos.request.v1.AttributesMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.AttributesMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.AttributesMap}
 */
proto.cerbos.request.v1.AttributesMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAttrMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.AttributesMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.AttributesMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.AttributesMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AttributesMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttrMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * map<string, google.protobuf.Value> attr = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.cerbos.request.v1.AttributesMap.prototype.getAttrMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cerbos.request.v1.AttributesMap} returns this
 */
proto.cerbos.request.v1.AttributesMap.prototype.clearAttrMap = function() {
  this.getAttrMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.CheckResourceBatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.CheckResourceBatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    principal: (f = msg.getPrincipal()) && cerbos_engine_v1_engine_pb.Principal.toObject(includeInstance, f),
    resourcesList: jspb.Message.toObjectList(msg.getResourcesList(),
    proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.toObject, includeInstance),
    auxData: (f = msg.getAuxData()) && proto.cerbos.request.v1.AuxData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.CheckResourceBatchRequest;
  return proto.cerbos.request.v1.CheckResourceBatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.CheckResourceBatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new cerbos_engine_v1_engine_pb.Principal;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 3:
      var value = new proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry;
      reader.readMessage(value,proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.deserializeBinaryFromReader);
      msg.addResources(value);
      break;
    case 4:
      var value = new proto.cerbos.request.v1.AuxData;
      reader.readMessage(value,proto.cerbos.request.v1.AuxData.deserializeBinaryFromReader);
      msg.setAuxData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.CheckResourceBatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.CheckResourceBatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cerbos_engine_v1_engine_pb.Principal.serializeBinaryToWriter
    );
  }
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.serializeBinaryToWriter
    );
  }
  f = message.getAuxData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cerbos.request.v1.AuxData.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    resource: (f = msg.getResource()) && cerbos_engine_v1_engine_pb.Resource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry;
  return proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addActions(value);
      break;
    case 2:
      var value = new cerbos_engine_v1_engine_pb.Resource;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cerbos_engine_v1_engine_pb.Resource.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string actions = 1;
 * @return {!Array<string>}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.getActionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional cerbos.engine.v1.Resource resource = 2;
 * @return {?proto.cerbos.engine.v1.Resource}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.getResource = function() {
  return /** @type{?proto.cerbos.engine.v1.Resource} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Resource, 2));
};


/**
 * @param {?proto.cerbos.engine.v1.Resource|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} returns this
*/
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cerbos.engine.v1.Principal principal = 2;
 * @return {?proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.getPrincipal = function() {
  return /** @type{?proto.cerbos.engine.v1.Principal} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Principal, 2));
};


/**
 * @param {?proto.cerbos.engine.v1.Principal|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest} returns this
*/
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated BatchEntry resources = 3;
 * @return {!Array<!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry>}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.getResourcesList = function() {
  return /** @type{!Array<!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry, 3));
};


/**
 * @param {!Array<!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry>} value
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest} returns this
*/
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.setResourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.addResources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cerbos.request.v1.CheckResourceBatchRequest.BatchEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * optional AuxData aux_data = 4;
 * @return {?proto.cerbos.request.v1.AuxData}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.getAuxData = function() {
  return /** @type{?proto.cerbos.request.v1.AuxData} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.AuxData, 4));
};


/**
 * @param {?proto.cerbos.request.v1.AuxData|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest} returns this
*/
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.setAuxData = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourceBatchRequest} returns this
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.clearAuxData = function() {
  return this.setAuxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourceBatchRequest.prototype.hasAuxData = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.CheckResourcesRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.CheckResourcesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.CheckResourcesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourcesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeMeta: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    principal: (f = msg.getPrincipal()) && cerbos_engine_v1_engine_pb.Principal.toObject(includeInstance, f),
    resourcesList: jspb.Message.toObjectList(msg.getResourcesList(),
    proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.toObject, includeInstance),
    auxData: (f = msg.getAuxData()) && proto.cerbos.request.v1.AuxData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest}
 */
proto.cerbos.request.v1.CheckResourcesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.CheckResourcesRequest;
  return proto.cerbos.request.v1.CheckResourcesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.CheckResourcesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest}
 */
proto.cerbos.request.v1.CheckResourcesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMeta(value);
      break;
    case 3:
      var value = new cerbos_engine_v1_engine_pb.Principal;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 4:
      var value = new proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry;
      reader.readMessage(value,proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.deserializeBinaryFromReader);
      msg.addResources(value);
      break;
    case 5:
      var value = new proto.cerbos.request.v1.AuxData;
      reader.readMessage(value,proto.cerbos.request.v1.AuxData.deserializeBinaryFromReader);
      msg.setAuxData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.CheckResourcesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.CheckResourcesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourcesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeMeta();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cerbos_engine_v1_engine_pb.Principal.serializeBinaryToWriter
    );
  }
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.serializeBinaryToWriter
    );
  }
  f = message.getAuxData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cerbos.request.v1.AuxData.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    resource: (f = msg.getResource()) && cerbos_engine_v1_engine_pb.Resource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry}
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry;
  return proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry}
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addActions(value);
      break;
    case 2:
      var value = new cerbos_engine_v1_engine_pb.Resource;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cerbos_engine_v1_engine_pb.Resource.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string actions = 1;
 * @return {!Array<string>}
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.getActionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional cerbos.engine.v1.Resource resource = 2;
 * @return {?proto.cerbos.engine.v1.Resource}
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.getResource = function() {
  return /** @type{?proto.cerbos.engine.v1.Resource} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Resource, 2));
};


/**
 * @param {?proto.cerbos.engine.v1.Resource|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} returns this
*/
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_meta = 2;
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.getIncludeMeta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.setIncludeMeta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional cerbos.engine.v1.Principal principal = 3;
 * @return {?proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.getPrincipal = function() {
  return /** @type{?proto.cerbos.engine.v1.Principal} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Principal, 3));
};


/**
 * @param {?proto.cerbos.engine.v1.Principal|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
*/
proto.cerbos.request.v1.CheckResourcesRequest.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ResourceEntry resources = 4;
 * @return {!Array<!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry>}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.getResourcesList = function() {
  return /** @type{!Array<!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry, 4));
};


/**
 * @param {!Array<!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry>} value
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
*/
proto.cerbos.request.v1.CheckResourcesRequest.prototype.setResourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.addResources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cerbos.request.v1.CheckResourcesRequest.ResourceEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * optional AuxData aux_data = 5;
 * @return {?proto.cerbos.request.v1.AuxData}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.getAuxData = function() {
  return /** @type{?proto.cerbos.request.v1.AuxData} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.AuxData, 5));
};


/**
 * @param {?proto.cerbos.request.v1.AuxData|undefined} value
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
*/
proto.cerbos.request.v1.CheckResourcesRequest.prototype.setAuxData = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.CheckResourcesRequest} returns this
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.clearAuxData = function() {
  return this.setAuxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.CheckResourcesRequest.prototype.hasAuxData = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.AuxData.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.AuxData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.AuxData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AuxData.toObject = function(includeInstance, msg) {
  var f, obj = {
    jwt: (f = msg.getJwt()) && proto.cerbos.request.v1.AuxData.JWT.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.AuxData}
 */
proto.cerbos.request.v1.AuxData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.AuxData;
  return proto.cerbos.request.v1.AuxData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.AuxData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.AuxData}
 */
proto.cerbos.request.v1.AuxData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cerbos.request.v1.AuxData.JWT;
      reader.readMessage(value,proto.cerbos.request.v1.AuxData.JWT.deserializeBinaryFromReader);
      msg.setJwt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.AuxData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.AuxData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.AuxData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AuxData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJwt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cerbos.request.v1.AuxData.JWT.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.AuxData.JWT.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.AuxData.JWT.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.AuxData.JWT} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AuxData.JWT.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keySetId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.AuxData.JWT}
 */
proto.cerbos.request.v1.AuxData.JWT.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.AuxData.JWT;
  return proto.cerbos.request.v1.AuxData.JWT.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.AuxData.JWT} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.AuxData.JWT}
 */
proto.cerbos.request.v1.AuxData.JWT.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeySetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.AuxData.JWT.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.AuxData.JWT.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.AuxData.JWT} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AuxData.JWT.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeySetId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.cerbos.request.v1.AuxData.JWT.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.AuxData.JWT} returns this
 */
proto.cerbos.request.v1.AuxData.JWT.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key_set_id = 2;
 * @return {string}
 */
proto.cerbos.request.v1.AuxData.JWT.prototype.getKeySetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.AuxData.JWT} returns this
 */
proto.cerbos.request.v1.AuxData.JWT.prototype.setKeySetId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional JWT jwt = 1;
 * @return {?proto.cerbos.request.v1.AuxData.JWT}
 */
proto.cerbos.request.v1.AuxData.prototype.getJwt = function() {
  return /** @type{?proto.cerbos.request.v1.AuxData.JWT} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.AuxData.JWT, 1));
};


/**
 * @param {?proto.cerbos.request.v1.AuxData.JWT|undefined} value
 * @return {!proto.cerbos.request.v1.AuxData} returns this
*/
proto.cerbos.request.v1.AuxData.prototype.setJwt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.AuxData} returns this
 */
proto.cerbos.request.v1.AuxData.prototype.clearJwt = function() {
  return this.setJwt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.AuxData.prototype.hasJwt = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.File.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.File.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contents: msg.getContents_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.File}
 */
proto.cerbos.request.v1.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.File;
  return proto.cerbos.request.v1.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.File}
 */
proto.cerbos.request.v1.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContents_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.cerbos.request.v1.File.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.File} returns this
 */
proto.cerbos.request.v1.File.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes contents = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cerbos.request.v1.File.prototype.getContents = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes contents = 2;
 * This is a type-conversion wrapper around `getContents()`
 * @return {string}
 */
proto.cerbos.request.v1.File.prototype.getContents_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContents()));
};


/**
 * optional bytes contents = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContents()`
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.File.prototype.getContents_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContents()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cerbos.request.v1.File} returns this
 */
proto.cerbos.request.v1.File.prototype.setContents = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.PlaygroundValidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.PlaygroundValidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    playgroundId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.cerbos.request.v1.File.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.PlaygroundValidateRequest}
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.PlaygroundValidateRequest;
  return proto.cerbos.request.v1.PlaygroundValidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.PlaygroundValidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.PlaygroundValidateRequest}
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaygroundId(value);
      break;
    case 2:
      var value = new proto.cerbos.request.v1.File;
      reader.readMessage(value,proto.cerbos.request.v1.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.PlaygroundValidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.PlaygroundValidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaygroundId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cerbos.request.v1.File.serializeBinaryToWriter
    );
  }
};


/**
 * optional string playground_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.getPlaygroundId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.PlaygroundValidateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.setPlaygroundId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated File files = 2;
 * @return {!Array<!proto.cerbos.request.v1.File>}
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.cerbos.request.v1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.request.v1.File, 2));
};


/**
 * @param {!Array<!proto.cerbos.request.v1.File>} value
 * @return {!proto.cerbos.request.v1.PlaygroundValidateRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cerbos.request.v1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.File}
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cerbos.request.v1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.PlaygroundValidateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundValidateRequest.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.PlaygroundTestRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.PlaygroundTestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.PlaygroundTestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundTestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    playgroundId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.cerbos.request.v1.File.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.PlaygroundTestRequest}
 */
proto.cerbos.request.v1.PlaygroundTestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.PlaygroundTestRequest;
  return proto.cerbos.request.v1.PlaygroundTestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.PlaygroundTestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.PlaygroundTestRequest}
 */
proto.cerbos.request.v1.PlaygroundTestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaygroundId(value);
      break;
    case 2:
      var value = new proto.cerbos.request.v1.File;
      reader.readMessage(value,proto.cerbos.request.v1.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.PlaygroundTestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.PlaygroundTestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundTestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaygroundId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cerbos.request.v1.File.serializeBinaryToWriter
    );
  }
};


/**
 * optional string playground_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.getPlaygroundId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.PlaygroundTestRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.setPlaygroundId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated File files = 2;
 * @return {!Array<!proto.cerbos.request.v1.File>}
 */
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.cerbos.request.v1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.request.v1.File, 2));
};


/**
 * @param {!Array<!proto.cerbos.request.v1.File>} value
 * @return {!proto.cerbos.request.v1.PlaygroundTestRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cerbos.request.v1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.File}
 */
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cerbos.request.v1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.PlaygroundTestRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundTestRequest.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.repeatedFields_ = [2,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.PlaygroundEvaluateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    playgroundId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.cerbos.request.v1.File.toObject, includeInstance),
    principal: (f = msg.getPrincipal()) && cerbos_engine_v1_engine_pb.Principal.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && cerbos_engine_v1_engine_pb.Resource.toObject(includeInstance, f),
    actionsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    auxData: (f = msg.getAuxData()) && proto.cerbos.request.v1.AuxData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.PlaygroundEvaluateRequest;
  return proto.cerbos.request.v1.PlaygroundEvaluateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaygroundId(value);
      break;
    case 2:
      var value = new proto.cerbos.request.v1.File;
      reader.readMessage(value,proto.cerbos.request.v1.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    case 3:
      var value = new cerbos_engine_v1_engine_pb.Principal;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 4:
      var value = new cerbos_engine_v1_engine_pb.Resource;
      reader.readMessage(value,cerbos_engine_v1_engine_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addActions(value);
      break;
    case 6:
      var value = new proto.cerbos.request.v1.AuxData;
      reader.readMessage(value,proto.cerbos.request.v1.AuxData.deserializeBinaryFromReader);
      msg.setAuxData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.PlaygroundEvaluateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaygroundId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cerbos.request.v1.File.serializeBinaryToWriter
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cerbos_engine_v1_engine_pb.Principal.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cerbos_engine_v1_engine_pb.Resource.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getAuxData();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cerbos.request.v1.AuxData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string playground_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.getPlaygroundId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.setPlaygroundId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated File files = 2;
 * @return {!Array<!proto.cerbos.request.v1.File>}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.cerbos.request.v1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.request.v1.File, 2));
};


/**
 * @param {!Array<!proto.cerbos.request.v1.File>} value
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cerbos.request.v1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.File}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cerbos.request.v1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};


/**
 * optional cerbos.engine.v1.Principal principal = 3;
 * @return {?proto.cerbos.engine.v1.Principal}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.getPrincipal = function() {
  return /** @type{?proto.cerbos.engine.v1.Principal} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Principal, 3));
};


/**
 * @param {?proto.cerbos.engine.v1.Principal|undefined} value
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cerbos.engine.v1.Resource resource = 4;
 * @return {?proto.cerbos.engine.v1.Resource}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.getResource = function() {
  return /** @type{?proto.cerbos.engine.v1.Resource} */ (
    jspb.Message.getWrapperField(this, cerbos_engine_v1_engine_pb.Resource, 4));
};


/**
 * @param {?proto.cerbos.engine.v1.Resource|undefined} value
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string actions = 5;
 * @return {!Array<string>}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.getActionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional AuxData aux_data = 6;
 * @return {?proto.cerbos.request.v1.AuxData}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.getAuxData = function() {
  return /** @type{?proto.cerbos.request.v1.AuxData} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.AuxData, 6));
};


/**
 * @param {?proto.cerbos.request.v1.AuxData|undefined} value
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.setAuxData = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlaygroundEvaluateRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.clearAuxData = function() {
  return this.setAuxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlaygroundEvaluateRequest.prototype.hasAuxData = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.repeatedFields_ = [2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.oneofGroups_ = [[3,4,5,6]];

/**
 * @enum {number}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.ProxyRequestCase = {
  PROXY_REQUEST_NOT_SET: 0,
  CHECK_RESOURCE_SET: 3,
  CHECK_RESOURCE_BATCH: 4,
  PLAN_RESOURCES: 5,
  CHECK_RESOURCES: 6
};

/**
 * @return {proto.cerbos.request.v1.PlaygroundProxyRequest.ProxyRequestCase}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.getProxyRequestCase = function() {
  return /** @type {proto.cerbos.request.v1.PlaygroundProxyRequest.ProxyRequestCase} */(jspb.Message.computeOneofCase(this, proto.cerbos.request.v1.PlaygroundProxyRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.PlaygroundProxyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.PlaygroundProxyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    playgroundId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.cerbos.request.v1.File.toObject, includeInstance),
    checkResourceSet: (f = msg.getCheckResourceSet()) && proto.cerbos.request.v1.CheckResourceSetRequest.toObject(includeInstance, f),
    checkResourceBatch: (f = msg.getCheckResourceBatch()) && proto.cerbos.request.v1.CheckResourceBatchRequest.toObject(includeInstance, f),
    planResources: (f = msg.getPlanResources()) && proto.cerbos.request.v1.PlanResourcesRequest.toObject(includeInstance, f),
    checkResources: (f = msg.getCheckResources()) && proto.cerbos.request.v1.CheckResourcesRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.PlaygroundProxyRequest;
  return proto.cerbos.request.v1.PlaygroundProxyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.PlaygroundProxyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaygroundId(value);
      break;
    case 2:
      var value = new proto.cerbos.request.v1.File;
      reader.readMessage(value,proto.cerbos.request.v1.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    case 3:
      var value = new proto.cerbos.request.v1.CheckResourceSetRequest;
      reader.readMessage(value,proto.cerbos.request.v1.CheckResourceSetRequest.deserializeBinaryFromReader);
      msg.setCheckResourceSet(value);
      break;
    case 4:
      var value = new proto.cerbos.request.v1.CheckResourceBatchRequest;
      reader.readMessage(value,proto.cerbos.request.v1.CheckResourceBatchRequest.deserializeBinaryFromReader);
      msg.setCheckResourceBatch(value);
      break;
    case 5:
      var value = new proto.cerbos.request.v1.PlanResourcesRequest;
      reader.readMessage(value,proto.cerbos.request.v1.PlanResourcesRequest.deserializeBinaryFromReader);
      msg.setPlanResources(value);
      break;
    case 6:
      var value = new proto.cerbos.request.v1.CheckResourcesRequest;
      reader.readMessage(value,proto.cerbos.request.v1.CheckResourcesRequest.deserializeBinaryFromReader);
      msg.setCheckResources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.PlaygroundProxyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.PlaygroundProxyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaygroundId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cerbos.request.v1.File.serializeBinaryToWriter
    );
  }
  f = message.getCheckResourceSet();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cerbos.request.v1.CheckResourceSetRequest.serializeBinaryToWriter
    );
  }
  f = message.getCheckResourceBatch();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cerbos.request.v1.CheckResourceBatchRequest.serializeBinaryToWriter
    );
  }
  f = message.getPlanResources();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cerbos.request.v1.PlanResourcesRequest.serializeBinaryToWriter
    );
  }
  f = message.getCheckResources();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cerbos.request.v1.CheckResourcesRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string playground_id = 1;
 * @return {string}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.getPlaygroundId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.setPlaygroundId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated File files = 2;
 * @return {!Array<!proto.cerbos.request.v1.File>}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.cerbos.request.v1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cerbos.request.v1.File, 2));
};


/**
 * @param {!Array<!proto.cerbos.request.v1.File>} value
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cerbos.request.v1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.File}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cerbos.request.v1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};


/**
 * optional CheckResourceSetRequest check_resource_set = 3;
 * @return {?proto.cerbos.request.v1.CheckResourceSetRequest}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.getCheckResourceSet = function() {
  return /** @type{?proto.cerbos.request.v1.CheckResourceSetRequest} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.CheckResourceSetRequest, 3));
};


/**
 * @param {?proto.cerbos.request.v1.CheckResourceSetRequest|undefined} value
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.setCheckResourceSet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cerbos.request.v1.PlaygroundProxyRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.clearCheckResourceSet = function() {
  return this.setCheckResourceSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.hasCheckResourceSet = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CheckResourceBatchRequest check_resource_batch = 4;
 * @return {?proto.cerbos.request.v1.CheckResourceBatchRequest}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.getCheckResourceBatch = function() {
  return /** @type{?proto.cerbos.request.v1.CheckResourceBatchRequest} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.CheckResourceBatchRequest, 4));
};


/**
 * @param {?proto.cerbos.request.v1.CheckResourceBatchRequest|undefined} value
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.setCheckResourceBatch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cerbos.request.v1.PlaygroundProxyRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.clearCheckResourceBatch = function() {
  return this.setCheckResourceBatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.hasCheckResourceBatch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PlanResourcesRequest plan_resources = 5;
 * @return {?proto.cerbos.request.v1.PlanResourcesRequest}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.getPlanResources = function() {
  return /** @type{?proto.cerbos.request.v1.PlanResourcesRequest} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.PlanResourcesRequest, 5));
};


/**
 * @param {?proto.cerbos.request.v1.PlanResourcesRequest|undefined} value
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.setPlanResources = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cerbos.request.v1.PlaygroundProxyRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.clearPlanResources = function() {
  return this.setPlanResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.hasPlanResources = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CheckResourcesRequest check_resources = 6;
 * @return {?proto.cerbos.request.v1.CheckResourcesRequest}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.getCheckResources = function() {
  return /** @type{?proto.cerbos.request.v1.CheckResourcesRequest} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.CheckResourcesRequest, 6));
};


/**
 * @param {?proto.cerbos.request.v1.CheckResourcesRequest|undefined} value
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
*/
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.setCheckResources = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cerbos.request.v1.PlaygroundProxyRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.PlaygroundProxyRequest} returns this
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.clearCheckResources = function() {
  return this.setCheckResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.PlaygroundProxyRequest.prototype.hasCheckResources = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.AddOrUpdatePolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.AddOrUpdatePolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    policiesList: jspb.Message.toObjectList(msg.getPoliciesList(),
    cerbos_policy_v1_policy_pb.Policy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.AddOrUpdatePolicyRequest}
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.AddOrUpdatePolicyRequest;
  return proto.cerbos.request.v1.AddOrUpdatePolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.AddOrUpdatePolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.AddOrUpdatePolicyRequest}
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cerbos_policy_v1_policy_pb.Policy;
      reader.readMessage(value,cerbos_policy_v1_policy_pb.Policy.deserializeBinaryFromReader);
      msg.addPolicies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.AddOrUpdatePolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.AddOrUpdatePolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoliciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cerbos_policy_v1_policy_pb.Policy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cerbos.policy.v1.Policy policies = 1;
 * @return {!Array<!proto.cerbos.policy.v1.Policy>}
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.prototype.getPoliciesList = function() {
  return /** @type{!Array<!proto.cerbos.policy.v1.Policy>} */ (
    jspb.Message.getRepeatedWrapperField(this, cerbos_policy_v1_policy_pb.Policy, 1));
};


/**
 * @param {!Array<!proto.cerbos.policy.v1.Policy>} value
 * @return {!proto.cerbos.request.v1.AddOrUpdatePolicyRequest} returns this
*/
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.prototype.setPoliciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cerbos.policy.v1.Policy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.policy.v1.Policy}
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.prototype.addPolicies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cerbos.policy.v1.Policy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.AddOrUpdatePolicyRequest} returns this
 */
proto.cerbos.request.v1.AddOrUpdatePolicyRequest.prototype.clearPoliciesList = function() {
  return this.setPoliciesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.FilterCase = {
  FILTER_NOT_SET: 0,
  TAIL: 2,
  BETWEEN: 3,
  SINCE: 4,
  LOOKUP: 5
};

/**
 * @return {proto.cerbos.request.v1.ListAuditLogEntriesRequest.FilterCase}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.getFilterCase = function() {
  return /** @type {proto.cerbos.request.v1.ListAuditLogEntriesRequest.FilterCase} */(jspb.Message.computeOneofCase(this, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.ListAuditLogEntriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tail: jspb.Message.getFieldWithDefault(msg, 2, 0),
    between: (f = msg.getBetween()) && proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.toObject(includeInstance, f),
    since: (f = msg.getSince()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    lookup: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.ListAuditLogEntriesRequest;
  return proto.cerbos.request.v1.ListAuditLogEntriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTail(value);
      break;
    case 3:
      var value = new proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange;
      reader.readMessage(value,proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.deserializeBinaryFromReader);
      msg.setBetween(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setSince(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLookup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.ListAuditLogEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBetween();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getSince();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.Kind = {
  KIND_UNSPECIFIED: 0,
  KIND_ACCESS: 1,
  KIND_DECISION: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange;
  return proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} returns this
*/
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} returns this
*/
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Kind kind = 1;
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.Kind}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.getKind = function() {
  return /** @type {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.Kind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cerbos.request.v1.ListAuditLogEntriesRequest.Kind} value
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 tail = 2;
 * @return {number}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.getTail = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.setTail = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.clearTail = function() {
  return jspb.Message.setOneofField(this, 2, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.hasTail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TimeRange between = 3;
 * @return {?proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.getBetween = function() {
  return /** @type{?proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange} */ (
    jspb.Message.getWrapperField(this, proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange, 3));
};


/**
 * @param {?proto.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange|undefined} value
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
*/
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.setBetween = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.clearBetween = function() {
  return this.setBetween(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.hasBetween = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration since = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.getSince = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
*/
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.setSince = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.clearSince = function() {
  return this.setSince(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.hasSince = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string lookup = 5;
 * @return {string}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.getLookup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.setLookup = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cerbos.request.v1.ListAuditLogEntriesRequest} returns this
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.clearLookup = function() {
  return jspb.Message.setOneofField(this, 5, proto.cerbos.request.v1.ListAuditLogEntriesRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cerbos.request.v1.ListAuditLogEntriesRequest.prototype.hasLookup = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.ServerInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.ServerInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.ServerInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ServerInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.ServerInfoRequest}
 */
proto.cerbos.request.v1.ServerInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.ServerInfoRequest;
  return proto.cerbos.request.v1.ServerInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.ServerInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.ServerInfoRequest}
 */
proto.cerbos.request.v1.ServerInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.ServerInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.ServerInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.ServerInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ServerInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.ListPoliciesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.ListPoliciesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.ListPoliciesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListPoliciesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.ListPoliciesRequest}
 */
proto.cerbos.request.v1.ListPoliciesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.ListPoliciesRequest;
  return proto.cerbos.request.v1.ListPoliciesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.ListPoliciesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.ListPoliciesRequest}
 */
proto.cerbos.request.v1.ListPoliciesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.ListPoliciesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.ListPoliciesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.ListPoliciesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListPoliciesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.GetPolicyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.GetPolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.GetPolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.GetPolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.GetPolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.GetPolicyRequest}
 */
proto.cerbos.request.v1.GetPolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.GetPolicyRequest;
  return proto.cerbos.request.v1.GetPolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.GetPolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.GetPolicyRequest}
 */
proto.cerbos.request.v1.GetPolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.GetPolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.GetPolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.GetPolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.GetPolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.cerbos.request.v1.GetPolicyRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.request.v1.GetPolicyRequest} returns this
 */
proto.cerbos.request.v1.GetPolicyRequest.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.GetPolicyRequest} returns this
 */
proto.cerbos.request.v1.GetPolicyRequest.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.GetPolicyRequest} returns this
 */
proto.cerbos.request.v1.GetPolicyRequest.prototype.clearIdList = function() {
  return this.setIdList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.AddOrUpdateSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.AddOrUpdateSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemasList: jspb.Message.toObjectList(msg.getSchemasList(),
    cerbos_schema_v1_schema_pb.Schema.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.AddOrUpdateSchemaRequest}
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.AddOrUpdateSchemaRequest;
  return proto.cerbos.request.v1.AddOrUpdateSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.AddOrUpdateSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.AddOrUpdateSchemaRequest}
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cerbos_schema_v1_schema_pb.Schema;
      reader.readMessage(value,cerbos_schema_v1_schema_pb.Schema.deserializeBinaryFromReader);
      msg.addSchemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.AddOrUpdateSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.AddOrUpdateSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cerbos_schema_v1_schema_pb.Schema.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cerbos.schema.v1.Schema schemas = 1;
 * @return {!Array<!proto.cerbos.schema.v1.Schema>}
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.prototype.getSchemasList = function() {
  return /** @type{!Array<!proto.cerbos.schema.v1.Schema>} */ (
    jspb.Message.getRepeatedWrapperField(this, cerbos_schema_v1_schema_pb.Schema, 1));
};


/**
 * @param {!Array<!proto.cerbos.schema.v1.Schema>} value
 * @return {!proto.cerbos.request.v1.AddOrUpdateSchemaRequest} returns this
*/
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.prototype.setSchemasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cerbos.schema.v1.Schema=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cerbos.schema.v1.Schema}
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.prototype.addSchemas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cerbos.schema.v1.Schema, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.AddOrUpdateSchemaRequest} returns this
 */
proto.cerbos.request.v1.AddOrUpdateSchemaRequest.prototype.clearSchemasList = function() {
  return this.setSchemasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.ListSchemasRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.ListSchemasRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.ListSchemasRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListSchemasRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.ListSchemasRequest}
 */
proto.cerbos.request.v1.ListSchemasRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.ListSchemasRequest;
  return proto.cerbos.request.v1.ListSchemasRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.ListSchemasRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.ListSchemasRequest}
 */
proto.cerbos.request.v1.ListSchemasRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.ListSchemasRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.ListSchemasRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.ListSchemasRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ListSchemasRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.GetSchemaRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.GetSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.GetSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.GetSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.GetSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.GetSchemaRequest}
 */
proto.cerbos.request.v1.GetSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.GetSchemaRequest;
  return proto.cerbos.request.v1.GetSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.GetSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.GetSchemaRequest}
 */
proto.cerbos.request.v1.GetSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.GetSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.GetSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.GetSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.GetSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.cerbos.request.v1.GetSchemaRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.request.v1.GetSchemaRequest} returns this
 */
proto.cerbos.request.v1.GetSchemaRequest.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.GetSchemaRequest} returns this
 */
proto.cerbos.request.v1.GetSchemaRequest.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.GetSchemaRequest} returns this
 */
proto.cerbos.request.v1.GetSchemaRequest.prototype.clearIdList = function() {
  return this.setIdList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cerbos.request.v1.DeleteSchemaRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.DeleteSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.DeleteSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.DeleteSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.DeleteSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.DeleteSchemaRequest}
 */
proto.cerbos.request.v1.DeleteSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.DeleteSchemaRequest;
  return proto.cerbos.request.v1.DeleteSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.DeleteSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.DeleteSchemaRequest}
 */
proto.cerbos.request.v1.DeleteSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.DeleteSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.DeleteSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.DeleteSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.DeleteSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.cerbos.request.v1.DeleteSchemaRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cerbos.request.v1.DeleteSchemaRequest} returns this
 */
proto.cerbos.request.v1.DeleteSchemaRequest.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cerbos.request.v1.DeleteSchemaRequest} returns this
 */
proto.cerbos.request.v1.DeleteSchemaRequest.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cerbos.request.v1.DeleteSchemaRequest} returns this
 */
proto.cerbos.request.v1.DeleteSchemaRequest.prototype.clearIdList = function() {
  return this.setIdList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cerbos.request.v1.ReloadStoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cerbos.request.v1.ReloadStoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cerbos.request.v1.ReloadStoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ReloadStoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wait: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cerbos.request.v1.ReloadStoreRequest}
 */
proto.cerbos.request.v1.ReloadStoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cerbos.request.v1.ReloadStoreRequest;
  return proto.cerbos.request.v1.ReloadStoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cerbos.request.v1.ReloadStoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cerbos.request.v1.ReloadStoreRequest}
 */
proto.cerbos.request.v1.ReloadStoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWait(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cerbos.request.v1.ReloadStoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cerbos.request.v1.ReloadStoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cerbos.request.v1.ReloadStoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cerbos.request.v1.ReloadStoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWait();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool wait = 1;
 * @return {boolean}
 */
proto.cerbos.request.v1.ReloadStoreRequest.prototype.getWait = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cerbos.request.v1.ReloadStoreRequest} returns this
 */
proto.cerbos.request.v1.ReloadStoreRequest.prototype.setWait = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.cerbos.request.v1);
