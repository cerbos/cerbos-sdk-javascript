name: CI

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - ready_for_review
      - reopened
      - synchronize

  schedule:
    - cron: 0 1 * * 1-5

env:
  CERBOS_HUB_API_ENDPOINT: ${{ secrets.CERBOS_HUB_API_ENDPOINT }}
  CERBOS_HUB_STORE_ID: ${{ secrets.CERBOS_HUB_STORE_ID }}
  CERBOS_HUB_STORES_CLIENT_ID: ${{ secrets.CERBOS_HUB_STORES_CLIENT_ID }}
  CERBOS_HUB_STORES_CLIENT_SECRET: ${{ secrets.CERBOS_HUB_STORES_CLIENT_SECRET }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: ./.github/actions/setup-node

      - name: Lint code
        run: pnpm run lint
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Generate code
        run: pnpm run generate

      - name: Generate docs
        run: pnpm run docs

      - name: Check for uncommitted changes
        run: |-
          if [[ -n $(git status --porcelain) ]]; then
            echo "::error::Uncommitted changes detected"
            git -c color.ui=always status -vv
            exit 1
          fi

  test-matrix:
    name: Generate test matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.test-matrix.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: ./.github/actions/setup-node
        with:
          only-scripts: true

      - id: test-matrix
        name: Generate test matrix
        run: pnpm run test:matrix
        env:
          GITHUB_TOKEN: ${{ github.token }}

  test-parallel:
    name: Test (${{ matrix.title }})
    runs-on: ubuntu-latest
    continue-on-error: ${{ github.event_name != 'schedule' && !matrix.required }}
    needs:
      - test-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.test-matrix.outputs.matrix).parallel }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
          save-cache: false

      - name: Set up tests
        if: matrix.setup
        run: ${{ matrix.setup }}

      - name: Run tests
        run: ${{ matrix.test }}

  test-serial:
    name: Test (${{ matrix.title }})
    runs-on: ubuntu-latest
    continue-on-error: ${{ github.event_name != 'schedule' && !matrix.required }}
    needs:
      - test-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.test-matrix.outputs.matrix).serial }}
      max-parallel: 1
    concurrency:
      group: ci-test-serial
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
          save-cache: false

      - name: Set up tests
        if: matrix.setup
        run: ${{ matrix.setup }}

      - name: Run tests
        run: ${{ matrix.test }}

  test-results:
    name: Check test results
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test-parallel
      - test-serial
    steps:
      - name: Check test results
        run: |-
          test "${{ needs.test-parallel.result }}" = "success"
          test "${{ needs.test-serial.result }}" = "success"
