name: CI

on:
  pull_request:
    branches:
      - main

  schedule:
    - cron: 0 1 * * 1-5

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version-file: .node-version

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Generate docs
        run: npm run docs

      - name: Check for uncommitted changes
        run: |-
          git_status=$(git status --porcelain)
          if [[ -n "${git_status}" ]]; then
            echo "::error::Uncommitted changes detected"
            printf "%s\n" "${git_status}"
            exit 1
          fi

  test-matrix:
    name: Generate test matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.test-matrix.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - id: test-matrix
        name: Generate test matrix
        run: scripts/test-matrix

  test:
    name: Test (Cerbos ${{ matrix.cerbos }} | Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    continue-on-error: ${{ endsWith(matrix.cerbos, '-prerelease') }}
    env:
      CERBOS_VERSION: ${{ matrix.cerbos }}
    needs:
      - test-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.test-matrix.outputs.matrix) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: ${{ matrix.node }}

      - name: Update npm
        run: npm install --global npm

      - name: Install dependencies
        run: npm ci

      - name: Start test servers
        run: npm run test:servers:start

      - name: Run tests
        run: npm test

  test-results:
    name: Check test results
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test
    steps:
      - name: Check test results
        run: test "${{ needs.test.result }}" = "success"
